alpha = 0.05
res = results(ds, contrast=c("Location2", "TreatmentSite2", "ControlSite2"), alpha=alpha)
res = res[order(res$padj, na.last=NA), ]
res_sig = res[(res$padj < alpha), ]
res_sig = cbind(as(res_sig, "data.frame"), as(tax_table(ps)[rownames(res_sig), ], "matrix"))
res_sig
ggplot(res_sig, aes(x=ta4, y=log2FoldChange, color=ta2)) +
geom_jitter(size=3, width = 0.2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
?prune_samples
ps = prune_samples(samples_keeping, physeq)
samples_keeping = c("Batch2DNA1", "Batch2DNA2","Batch2DNA3","Batch2DNA7","Batch2DNA8","Batch2DNA9")
ps = prune_samples(samples_keeping, physeq)
ps
samples_keeping = c("Batch2DNA1", "Batch2DNA2","Batch2DNA3","Batch2DNA7","Batch2DNA8","Batch2DNA9")
ps = prune_samples(samples_keeping, physeq)
sample_data(ps)$Treatment <- as.factor(sample_data(ps)$Treatment)
ds = phyloseq_to_deseq2(ps, ~ Treatment)
ds = DESeq(ds)
alpha = 0.05
res = results(ds, contrast=c("Treatment", "Control", "Treatment"), alpha=alpha)
res = res[order(res$padj, na.last=NA), ]
res_sig = res[(res$padj < alpha), ]
res_sig = cbind(as(res_sig, "data.frame"), as(tax_table(ps)[rownames(res_sig), ], "matrix"))
ggplot(res_sig, aes(x=ta4, y=log2FoldChange, color=ta2)) +
geom_jitter(size=3, width = 0.2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
samples_keeping = c("DNA10","DNA11","DNA12","DNA13","DNA14","DNA15")
ps = prune_samples(samples_keeping, physeq)
sample_data(ps)$Treatment <- as.factor(sample_data(ps)$Treatment)
ds = phyloseq_to_deseq2(ps, ~ Treatment)
ds = DESeq(ds)
alpha = 0.05
res = results(ds, contrast=c("Treatment", "Control", "Treatment"), alpha=alpha)
res = res[order(res$padj, na.last=NA), ]
res_sig = res[(res$padj < alpha), ]
res_sig = cbind(as(res_sig, "data.frame"), as(tax_table(ps)[rownames(res_sig), ], "matrix"))
ggplot(res_sig, aes(x=ta4, y=log2FoldChange, color=ta2)) +
geom_jitter(size=3, width = 0.2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
ps = physeq
sample_data(ps)$Treatment <- as.factor(sample_data(ps)$Treatment)
ds = phyloseq_to_deseq2(ps, ~ Treatment)
ds = DESeq(ds)
alpha = 0.05
res = results(ds, contrast=c("Treatment", "Treatment", "Control"), alpha=alpha)
res = res[order(res$padj, na.last=NA), ]
res_sig = res[(res$padj < alpha), ]
res_sig = cbind(as(res_sig, "data.frame"), as(tax_table(ps)[rownames(res_sig), ], "matrix"))
ggplot(res_sig, aes(x=ta4, y=log2FoldChange, color=ta2)) +
geom_jitter(size=3, width = 0.2) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
res_sig
x <- parse_phyloseq(physeq_clr)
heat_tree(x,node_size = n_obs,node_color = n_obs,node_label = taxon_names,tree_label = taxon_names)
x <- parse_phyloseq(physeq_clr)
heat_tree(x,node_size = n_obs,node_color = n_obs, node_label = taxon_names,tree_label = taxon_names, node_color_interval=c(-5,5), layout="davidson-harel", initial_layout="reingold-tilford")
x <- parse_phyloseq(physeq_clr)
x
x
x <- parse_phyloseq(physeq_clr)
heat_tree(x,node_size = n_obs,node_color = n_obs, node_label = taxon_names,tree_label = taxon_names, node_color_interval=c(-20,20), layout="davidson-harel", initial_layout="reingold-tilford")
samples_keeping = c("DNA1","DNA4","Batch2DNA1","Batch2DNA2","Batch2DNA3","Batch2DNA10","Batch2DNA11","Batch2DNA12","DNA7","DNA8","DNA9","DNA10","DNA11","DNA12","DNA3")
physeq_red = prune_samples(samples_keeping, physeq_clr)
x <- parse_phyloseq(physeq_red)
heat_tree(x,node_size = n_obs,node_color = n_obs, node_label = taxon_names,tree_label = taxon_names, node_color_interval=c(-20,20), layout="davidson-harel", initial_layout="reingold-tilford")
?heat_tree
x$data
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
x$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
x <- parse_phyloseq(physeq_clr)
x$data$tax_abund <- calc_taxon_abund(x, "tax_data")
x$data$tax_data
x$data$tax_abund
x$data$tax_abund <- calc_taxon_abund(x, "tax_data")
obj$data$tax_abund
x$data
x$data$otu_table
x$data$tax_data <- calc_obs_props(x$otu_table, "tax_data")
x$data$tax_data
x$data$tax_abund <- calc_taxon_abund(x$otu_table, "tax_data")
control_samples <- x$data$sam_data$sample_id[x$data$sam_data$status == "Control"]
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]), simplify = TRUE)
x$data$otu_table
control_samples
x$data$sam_data
x$data$sam_data
x$data
x$data$sample_data
x$data$sample_data$Treatment
control_samples <- x$data$sample_data$sample_id[x$data$sample_data$Treatment == "Control"]
control_samples
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]), simplify = TRUE)
control_counts
obj %>%
heat_tree(node_size = control_counts,
node_color = control_counts,
node_label = taxon_names)
x %>%
heat_tree(node_size = control_counts,
node_color = control_counts,
node_label = taxon_names)
x %>% heat_tree(node_color = control_counts)
heat_tree(x)
control_counts
x$data
middle = '#C3C3C3'
color2_diff = '#009DA7'
color1_diff  = '#F1C40F'
x <- parse_phyloseq(physeq_clr)
control_samples <- x$data$sample_data$sample_id[x$data$sample_data$Treatment == "Control"]
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]), simplify = TRUE)
x %>%
heat_tree(node_size = control_counts,
node_color = control_counts,
node_label = taxon_names)
x$data
control_counts
length(control_counts)
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]))
x %>%
heat_tree(node_size = control_counts,
node_color = control_counts,
node_label = taxon_names)
length(control_counts)
length(x$data$otu_table)
nrow(x$data$otu_table)
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]), simplify=FALSE)
nrow(x$data$otu_table)
x %>%
heat_tree(node_size = control_counts,
node_color = control_counts,
node_label = taxon_names)
x <- parse_phyloseq(physeq)
control_samples <- x$data$sample_data$sample_id[x$data$sample_data$Treatment == "Control"]
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]), simplify=FALSE)
x %>%
heat_tree(node_size = control_counts,
node_color = control_counts,
node_label = taxon_names)
?obs_apply
control_counts <- obs_apply(x, "otu_table", function(i) mean(x$data$otu_table[i, control_samples]))
control_counts <- obs_apply(x, "otu_table", function(i) average(x$data$otu_table[i, control_samples]))
control_counts <- obs_apply(x, "otu_table", function(i) sum(x$data$otu_table[i, control_samples]))
?obs_apply
asvs
asvs = otu_table(physeq_clr)
asvs
asvs = otu_table(physeq_clr)
tax = tax_table(physeq_clr)
tax
tax[] <- lapply(tax, function(x) str_split(x, "__", simplify=TRUE)[1])
tax[] <- lapply(tax, function(x) strsplit(x, "__")[1])
tax
tax = tax_table(physeq_clr)
tax[] <- lapply(tax, function(x) strsplit(x, "__", simplify=TRUE)[1])
test = "D_0__Bacteria"
strsplit(test, "__")
strsplit(test, "__")[2]
strsplit(test, "__")[[2]]
strsplit(test, "__")[[1]][2]
tax[] <- lapply(tax, function(x) strsplit(test, "__")[[1]][2])
tax
tax = tax_table(physeq_clr)
tax[] <- lapply(tax, function(x) (strsplit(test, "__")[[1]][2]))
tax
tax = data.frame(tax_table(physeq_clr))
tax[] <- lapply(tax, function(x) (strsplit(test, "__")[[1]][2]))
tax
tax = data.frame(tax_table(physeq_clr))
tax_new = apply(tax, function(x) (strsplit(test, "__")[[1]][2]))
tax_new = apply(tax, MARGIN=c(1,2), function(x) (strsplit(test, "__")[[1]][2]))
tax_new
tax_new = apply(tax, MARGIN=c(1,2), function(x) (strsplit(x, "__")[[1]][2]))
tax_new
colnames(tax_new)
tax_new$lineage <- apply(tax_new[, colnames(tax_new)], 1, paste, collapse = ";")
tax_new
tax_new = apply(tax, MARGIN=c(1,2), function(x) (strsplit(x, "__")[[1]][2]))
tax_new
colnames(tax_new)
tax_new_coll = tax_new
tax_new_coll$lineage <- apply(tax_new_coll[, cols], 1, paste, collapse = ";")
cols = colnames(tax_new)
tax_new_coll = tax_new
tax_new_coll$lineage <- apply(tax_new_coll[, cols], 1, paste, collapse = ";")
tax_new_coll
tax_new_coll$lineage <- do.call(paste, c(tax_new_coll[cols], sep = ";"))
tax_new_coll = tax_new
tax_new_coll$lineage <- do.call(paste, c(tax_new_coll[cols], sep = ";"))
tax_new_coll$lineage <- do.call(paste, c(tax_new_coll[cols]), sep = ";")
tax_new_coll$lineage <- do.call(paste, tax_new_coll[cols], sep = ";")
pasted <- do.call(paste, tax_new[cols], sep = ";")
cols = colnames(tax_new)
pasted <- do.call(paste, tax_new[cols], sep = ";")
tax_new_coll %>% unite("lineage", 1:7, remove = FALSE)
tax_new_coll$lineage = paste(tax_new_coll$ta1, tax_new_coll$ta2, tax_new_coll$ta3, tax_new_coll$ta4, tax_new_coll$ta5, tax_new_coll$ta6, tax_new_coll$ta7, sep=";")
tax_new_coll$ta1
tax_new_coll = tax_new
tax_new_coll$ta1
tax_new_coll
tax_new_coll$ta1
tax_new_coll = as.matrix(tax_new)
tax_new_coll$ta1
tax_new_coll = tax_new
tax_new_coll['ta1']
tax_new_coll[['ta1']]
tax_new_coll = tax_new
tax_new_coll[['ta1']]
tax_new_coll['ta1']
tax_new_coll
tax_new_coll = data.frame(tax_new)
tax_new_coll
tax_new_coll = data.frame(tax_new)
tax_new_coll$lineage = paste(tax_new_coll$ta1, tax_new_coll$ta2, tax_new_coll$ta3, tax_new_coll$ta4, tax_new_coll$ta5, tax_new_coll$ta6, tax_new_coll$ta7, sep=";")
tax_new_coll
tax_new_coll$lineage
asv_tax = merge(asvs, tax_new_coll, by="row.names")
asv_tax
tax_new_coll = tax_new_coll[,'lineage']
asv_tax = merge(asvs, tax_new_coll, by="row.names")
asv_tax
tax_new_coll = data.frame(tax_new)
tax_new_coll$lineage = paste(tax_new_coll$ta1, tax_new_coll$ta2, tax_new_coll$ta3, tax_new_coll$ta4, tax_new_coll$ta5, tax_new_coll$ta6, tax_new_coll$ta7, sep=";")
tax_new_coll = tax_new_coll[c("lineage")]
asv_tax = merge(asvs, tax_new_coll, by="row.names")
asv_tax
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
sample_data(physeq_clr)
sample_data(physeq_clr)$Treatment
obj$data
x$data
x <- parse_phyloseq(physeq_clr)
obj$data$sample_data = x$data$sample_data
obj$data$sample_data = x$data$sample_data
obj$data$sample_data
obj$data
control_samples <- obj$data$sample_data$sample_id[obj$data$sample_data$Treatment == "Control"]
control_counts <- obs_apply(obj, "otu_table", function(i) sum(obj$data$otu_table[i, control_samples]))
obj$data
obj$data$tax_data
obj$data$tax_abund
control_counts <- obs_apply(obj, "otu_table", function(i) sum(obj$data$tax_abund[i, control_samples]))
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=n_obs, layout="davidson-harel", initial_layout="reingold-tilford")
?compare_groups
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", func=function(x) mean(x))
obj$data
obj$data$sample_data
obj$data
colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
rn
obj$data$sample_data
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
print(obj$data$sample_data$Treatment[j])
}
}
}
keeping = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
}
}
}
}
keeping
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, func=function(x) mean(x))
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x) mean(x))
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
group = c(group, "keeping")
}
}
}
}
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x) mean(x))
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
group = c(group, "Control")
} else {
keeping = c(keeping, cn[i])
group = c(group, "Treatment")
}
}
}
}
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x) mean(x))
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x, y) mean(x))
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=n_obs, layout="davidson-harel", initial_layout="reingold-tilford")
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=diff_table, layout="davidson-harel", initial_layout="reingold-tilford")
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=log2_median_ratio, layout="davidson-harel", initial_layout="reingold-tilford")
obj$data$diff_table
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=value, layout="davidson-harel", initial_layout="reingold-tilford")
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=value, layout="davidson-harel", initial_layout="reingold-tilford")
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x, y) mean(y))
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=value, layout="davidson-harel", initial_layout="reingold-tilford")
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
set.seed(1)
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
group = c(group, "Control")
} else {
keeping = c(keeping, cn[i])
group = c(group, "Treatment")
}
}
}
}
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x, y) {
log_ratio <- median(x) - median(y)
if (is.nan(log_ratio)) {
log_ratio <- 0
}
list(log2_median_ratio = log_ratio,
median_diff = median(x) - median(y),
mean_diff = mean(x) - mean(y),
wilcox_p_value = wilcox.test(x, y)$p.value)
})
groups
group
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
set.seed(1)
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
group = c(group, "Control")
} else {
keeping = c(keeping, cn[i])
group = c(group, "Treatment")
}
}
}
}
asvs = otu_table(physeq_clr)
tax = data.frame(tax_table(physeq_clr))
tax_new = apply(tax, MARGIN=c(1,2), function(x) (strsplit(x, "__")[[1]][2]))
tax_new_coll = data.frame(tax_new)
tax_new_coll$lineage = paste(tax_new_coll$ta1, tax_new_coll$ta2, tax_new_coll$ta3, tax_new_coll$ta4, tax_new_coll$ta5, tax_new_coll$ta6, tax_new_coll$ta7, sep=";")
tax_new_coll = tax_new_coll[c("lineage")]
asv_tax = merge(asvs, tax_new_coll, by="row.names")
x <- parse_phyloseq(physeq_clr)
# asvs = otu_table(physeq_clr)
# tax = data.frame(tax_table(physeq_clr))
# tax_new = apply(tax, MARGIN=c(1,2), function(x) (strsplit(x, "__")[[1]][2]))
# tax_new_coll = data.frame(tax_new)
# tax_new_coll$lineage = paste(tax_new_coll$ta1, tax_new_coll$ta2, tax_new_coll$ta3, tax_new_coll$ta4, tax_new_coll$ta5, tax_new_coll$ta6, tax_new_coll$ta7, sep=";")
# tax_new_coll = tax_new_coll[c("lineage")]
# asv_tax = merge(asvs, tax_new_coll, by="row.names")
# x <- parse_phyloseq(physeq_clr)
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
set.seed(1)
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
group = c(group, "Control")
} else {
keeping = c(keeping, cn[i])
group = c(group, "Treatment")
}
}
}
}
cn
rn
cn
rn
obj$data$sample_data = x$data$sample_data
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Treatment[j] == "Control") {
keeping = c(keeping, cn[i])
group = c(group, "Control")
} else {
keeping = c(keeping, cn[i])
group = c(group, "Treatment")
}
}
}
}
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x, y) {
log_ratio <- median(x) - median(y)
if (is.nan(log_ratio)) {
log_ratio <- 0
}
list(log2_median_ratio = log_ratio,
median_diff = median(x) - median(y),
mean_diff = mean(x) - mean(y),
wilcox_p_value = wilcox.test(x, y)$p.value)
})
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=log2_median_ratio, layout="davidson-harel", initial_layout="reingold-tilford")
obj$data$diff_table$wilcox_p_value <- p.adjust(obj$data$diff_table$wilcox_p_value, method="fdr")
range(obj$data$diff_table$wilcox_p_value, finite=TRUE)
obj$data$diff_table$log2_median_ratio[obj$data$diff_table$wilcox_p_value > 0.05] <- 0
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=log2_median_ratio, layout="davidson-harel", initial_layout="reingold-tilford")
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
obj$data$sample_data = x$data$sample_data
set.seed(1)
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Location[j] == "Site2") {
keeping = c(keeping, cn[i])
group = c(group, obj$data$sample_data$Treatment[j])
}
}
}
}
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x, y) {
log_ratio <- median(x) - median(y)
if (is.nan(log_ratio)) {
log_ratio <- 0
}
list(log2_median_ratio = log_ratio,
median_diff = median(x) - median(y),
mean_diff = mean(x) - mean(y),
wilcox_p_value = wilcox.test(x, y)$p.value)
})
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=log2_median_ratio, layout="davidson-harel", initial_layout="reingold-tilford")
obj$data$diff_table$wilcox_p_value <- p.adjust(obj$data$diff_table$wilcox_p_value, method="fdr")
range(obj$data$diff_table$wilcox_p_value, finite=TRUE)
obj$data$diff_table$log2_median_ratio[obj$data$diff_table$wilcox_p_value > 0.05] <- 0
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=log2_median_ratio, layout="davidson-harel", initial_layout="reingold-tilford")
obj <- parse_tax_data(asv_tax, class_cols = "lineage", class_sep = ";")
obj$data$tax_data <- calc_obs_props(obj, "tax_data")
obj$data$tax_abund <- calc_taxon_abund(obj, "tax_data")
obj$data$sample_data = x$data$sample_data
set.seed(1)
cn = colnames(obj$data$tax_data)
rn = rownames(obj$data$sample_data)
keeping = c()
group = c()
for (i in 2:length(cn)) {
for (j in 1:length(rn)) {
if (obj$data$sample_data$sample_id[j] == cn[i]) {
if (obj$data$sample_data$Location[j] == "Site4") {
keeping = c(keeping, cn[i])
group = c(group, obj$data$sample_data$Treatment[j])
}
}
}
}
obj$data$diff_table <- compare_groups(obj, dataset = "tax_abund", cols=keeping, groups=group, func=function(x, y) {
log_ratio <- median(x) - median(y)
if (is.nan(log_ratio)) {
log_ratio <- 0
}
list(log2_median_ratio = log_ratio,
median_diff = median(x) - median(y),
mean_diff = mean(x) - mean(y),
wilcox_p_value = wilcox.test(x, y)$p.value)
})
heat_tree(obj, node_label=taxon_names, node_size=n_obs, node_color=log2_median_ratio, layout="davidson-harel", initial_layout="reingold-tilford")
